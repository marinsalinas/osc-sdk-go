/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"bytes"
	"encoding/json"
)

// DirectLinkInterface Information about the DirectLink interface.
type DirectLinkInterface struct {
	// The BGP (Border Gateway Protocol) ASN (Autonomous System Number) on the customer's side of the DirectLink interface.
	BgpAsn int32 `json:"BgpAsn"`
	// The BGP authentication key.
	BgpKey *string `json:"BgpKey,omitempty"`
	// The IP address on the customer's side of the DirectLink interface.
	ClientPrivateIp *string `json:"ClientPrivateIp,omitempty"`
	// The name of the DirectLink interface.
	DirectLinkInterfaceName string `json:"DirectLinkInterfaceName"`
	// The IP address on 3DS OUTSCALE's side of the DirectLink interface.
	OutscalePrivateIp *string `json:"OutscalePrivateIp,omitempty"`
	// The ID of the target virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
	// The VLAN number associated with the DirectLink interface.
	Vlan int32 `json:"Vlan"`
}

// GetBgpAsn returns the BgpAsn field value
func (o *DirectLinkInterface) GetBgpAsn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BgpAsn
}

// SetBgpAsn sets field value
func (o *DirectLinkInterface) SetBgpAsn(v int32) {
	o.BgpAsn = v
}

// GetBgpKey returns the BgpKey field value if set, zero value otherwise.
func (o *DirectLinkInterface) GetBgpKey() string {
	if o == nil || o.BgpKey == nil {
		var ret string
		return ret
	}
	return *o.BgpKey
}

// GetBgpKeyOk returns a tuple with the BgpKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetBgpKeyOk() (string, bool) {
	if o == nil || o.BgpKey == nil {
		var ret string
		return ret, false
	}
	return *o.BgpKey, true
}

// HasBgpKey returns a boolean if a field has been set.
func (o *DirectLinkInterface) HasBgpKey() bool {
	if o != nil && o.BgpKey != nil {
		return true
	}

	return false
}

// SetBgpKey gets a reference to the given string and assigns it to the BgpKey field.
func (o *DirectLinkInterface) SetBgpKey(v string) {
	o.BgpKey = &v
}

// GetClientPrivateIp returns the ClientPrivateIp field value if set, zero value otherwise.
func (o *DirectLinkInterface) GetClientPrivateIp() string {
	if o == nil || o.ClientPrivateIp == nil {
		var ret string
		return ret
	}
	return *o.ClientPrivateIp
}

// GetClientPrivateIpOk returns a tuple with the ClientPrivateIp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetClientPrivateIpOk() (string, bool) {
	if o == nil || o.ClientPrivateIp == nil {
		var ret string
		return ret, false
	}
	return *o.ClientPrivateIp, true
}

// HasClientPrivateIp returns a boolean if a field has been set.
func (o *DirectLinkInterface) HasClientPrivateIp() bool {
	if o != nil && o.ClientPrivateIp != nil {
		return true
	}

	return false
}

// SetClientPrivateIp gets a reference to the given string and assigns it to the ClientPrivateIp field.
func (o *DirectLinkInterface) SetClientPrivateIp(v string) {
	o.ClientPrivateIp = &v
}

// GetDirectLinkInterfaceName returns the DirectLinkInterfaceName field value
func (o *DirectLinkInterface) GetDirectLinkInterfaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DirectLinkInterfaceName
}

// SetDirectLinkInterfaceName sets field value
func (o *DirectLinkInterface) SetDirectLinkInterfaceName(v string) {
	o.DirectLinkInterfaceName = v
}

// GetOutscalePrivateIp returns the OutscalePrivateIp field value if set, zero value otherwise.
func (o *DirectLinkInterface) GetOutscalePrivateIp() string {
	if o == nil || o.OutscalePrivateIp == nil {
		var ret string
		return ret
	}
	return *o.OutscalePrivateIp
}

// GetOutscalePrivateIpOk returns a tuple with the OutscalePrivateIp field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *DirectLinkInterface) GetOutscalePrivateIpOk() (string, bool) {
	if o == nil || o.OutscalePrivateIp == nil {
		var ret string
		return ret, false
	}
	return *o.OutscalePrivateIp, true
}

// HasOutscalePrivateIp returns a boolean if a field has been set.
func (o *DirectLinkInterface) HasOutscalePrivateIp() bool {
	if o != nil && o.OutscalePrivateIp != nil {
		return true
	}

	return false
}

// SetOutscalePrivateIp gets a reference to the given string and assigns it to the OutscalePrivateIp field.
func (o *DirectLinkInterface) SetOutscalePrivateIp(v string) {
	o.OutscalePrivateIp = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *DirectLinkInterface) GetVirtualGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// SetVirtualGatewayId sets field value
func (o *DirectLinkInterface) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

// GetVlan returns the Vlan field value
func (o *DirectLinkInterface) GetVlan() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Vlan
}

// SetVlan sets field value
func (o *DirectLinkInterface) SetVlan(v int32) {
	o.Vlan = v
}

type NullableDirectLinkInterface struct {
	Value DirectLinkInterface
	ExplicitNull bool
}

func (v NullableDirectLinkInterface) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}	
}

func (v *NullableDirectLinkInterface) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

