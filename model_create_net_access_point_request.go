/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// CreateNetAccessPointRequest struct for CreateNetAccessPointRequest
type CreateNetAccessPointRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The ID of the Net.
	NetId string `json:"NetId"`
	// One or more IDs of route tables to use for the connection.
	RouteTableIds *[]string `json:"RouteTableIds,omitempty"`
	// The prefix list name corresponding to the service (for example, `com.outscale.eu-west-2.osu` for OSU).
	ServiceName string `json:"ServiceName"`
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateNetAccessPointRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointRequest) GetDryRunOk() (bool, bool) {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret, false
	}
	return *o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateNetAccessPointRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateNetAccessPointRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetNetId returns the NetId field value
func (o *CreateNetAccessPointRequest) GetNetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetId
}

// SetNetId sets field value
func (o *CreateNetAccessPointRequest) SetNetId(v string) {
	o.NetId = v
}

// GetRouteTableIds returns the RouteTableIds field value if set, zero value otherwise.
func (o *CreateNetAccessPointRequest) GetRouteTableIds() []string {
	if o == nil || o.RouteTableIds == nil {
		var ret []string
		return ret
	}
	return *o.RouteTableIds
}

// GetRouteTableIdsOk returns a tuple with the RouteTableIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetAccessPointRequest) GetRouteTableIdsOk() ([]string, bool) {
	if o == nil || o.RouteTableIds == nil {
		var ret []string
		return ret, false
	}
	return *o.RouteTableIds, true
}

// HasRouteTableIds returns a boolean if a field has been set.
func (o *CreateNetAccessPointRequest) HasRouteTableIds() bool {
	if o != nil && o.RouteTableIds != nil {
		return true
	}

	return false
}

// SetRouteTableIds gets a reference to the given []string and assigns it to the RouteTableIds field.
func (o *CreateNetAccessPointRequest) SetRouteTableIds(v []string) {
	o.RouteTableIds = &v
}

// GetServiceName returns the ServiceName field value
func (o *CreateNetAccessPointRequest) GetServiceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceName
}

// SetServiceName sets field value
func (o *CreateNetAccessPointRequest) SetServiceName(v string) {
	o.ServiceName = v
}

type NullableCreateNetAccessPointRequest struct {
	Value        CreateNetAccessPointRequest
	ExplicitNull bool
}

func (v NullableCreateNetAccessPointRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCreateNetAccessPointRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
