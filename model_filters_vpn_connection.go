/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// FiltersVpnConnection One or more filters.
type FiltersVpnConnection struct {
	// The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.
	BgpAsns *[]int64 `json:"BgpAsns,omitempty"`
	// The IDs of the client gateways.
	ClientGatewayIds *[]string `json:"ClientGatewayIds,omitempty"`
	// The types of the VPN connections (only `ipsec.1` is supported).
	ConnectionTypes *[]string `json:"ConnectionTypes,omitempty"`
	// The destination IP ranges.
	RouteDestinationIpRanges *[]string `json:"RouteDestinationIpRanges,omitempty"`
	// The states of the VPN connections (`pending` \\| `available` \\| `deleting` \\| `deleted`).
	States *[]string `json:"States,omitempty"`
	// If `false`, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If `true`, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
	StaticRoutesOnly *bool `json:"StaticRoutesOnly,omitempty"`
	// The IDs of the virtual gateways.
	VirtualGatewayIds *[]string `json:"VirtualGatewayIds,omitempty"`
	// The IDs of the VPN connections.
	VpnConnectionIds *[]string `json:"VpnConnectionIds,omitempty"`
}

// GetBgpAsns returns the BgpAsns field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetBgpAsns() []int64 {
	if o == nil || o.BgpAsns == nil {
		var ret []int64
		return ret
	}
	return *o.BgpAsns
}

// GetBgpAsnsOk returns a tuple with the BgpAsns field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetBgpAsnsOk() ([]int64, bool) {
	if o == nil || o.BgpAsns == nil {
		var ret []int64
		return ret, false
	}
	return *o.BgpAsns, true
}

// HasBgpAsns returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasBgpAsns() bool {
	if o != nil && o.BgpAsns != nil {
		return true
	}

	return false
}

// SetBgpAsns gets a reference to the given []int64 and assigns it to the BgpAsns field.
func (o *FiltersVpnConnection) SetBgpAsns(v []int64) {
	o.BgpAsns = &v
}

// GetClientGatewayIds returns the ClientGatewayIds field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetClientGatewayIds() []string {
	if o == nil || o.ClientGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.ClientGatewayIds
}

// GetClientGatewayIdsOk returns a tuple with the ClientGatewayIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetClientGatewayIdsOk() ([]string, bool) {
	if o == nil || o.ClientGatewayIds == nil {
		var ret []string
		return ret, false
	}
	return *o.ClientGatewayIds, true
}

// HasClientGatewayIds returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasClientGatewayIds() bool {
	if o != nil && o.ClientGatewayIds != nil {
		return true
	}

	return false
}

// SetClientGatewayIds gets a reference to the given []string and assigns it to the ClientGatewayIds field.
func (o *FiltersVpnConnection) SetClientGatewayIds(v []string) {
	o.ClientGatewayIds = &v
}

// GetConnectionTypes returns the ConnectionTypes field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetConnectionTypes() []string {
	if o == nil || o.ConnectionTypes == nil {
		var ret []string
		return ret
	}
	return *o.ConnectionTypes
}

// GetConnectionTypesOk returns a tuple with the ConnectionTypes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetConnectionTypesOk() ([]string, bool) {
	if o == nil || o.ConnectionTypes == nil {
		var ret []string
		return ret, false
	}
	return *o.ConnectionTypes, true
}

// HasConnectionTypes returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasConnectionTypes() bool {
	if o != nil && o.ConnectionTypes != nil {
		return true
	}

	return false
}

// SetConnectionTypes gets a reference to the given []string and assigns it to the ConnectionTypes field.
func (o *FiltersVpnConnection) SetConnectionTypes(v []string) {
	o.ConnectionTypes = &v
}

// GetRouteDestinationIpRanges returns the RouteDestinationIpRanges field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetRouteDestinationIpRanges() []string {
	if o == nil || o.RouteDestinationIpRanges == nil {
		var ret []string
		return ret
	}
	return *o.RouteDestinationIpRanges
}

// GetRouteDestinationIpRangesOk returns a tuple with the RouteDestinationIpRanges field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetRouteDestinationIpRangesOk() ([]string, bool) {
	if o == nil || o.RouteDestinationIpRanges == nil {
		var ret []string
		return ret, false
	}
	return *o.RouteDestinationIpRanges, true
}

// HasRouteDestinationIpRanges returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasRouteDestinationIpRanges() bool {
	if o != nil && o.RouteDestinationIpRanges != nil {
		return true
	}

	return false
}

// SetRouteDestinationIpRanges gets a reference to the given []string and assigns it to the RouteDestinationIpRanges field.
func (o *FiltersVpnConnection) SetRouteDestinationIpRanges(v []string) {
	o.RouteDestinationIpRanges = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetStatesOk() ([]string, bool) {
	if o == nil || o.States == nil {
		var ret []string
		return ret, false
	}
	return *o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersVpnConnection) SetStates(v []string) {
	o.States = &v
}

// GetStaticRoutesOnly returns the StaticRoutesOnly field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetStaticRoutesOnly() bool {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret
	}
	return *o.StaticRoutesOnly
}

// GetStaticRoutesOnlyOk returns a tuple with the StaticRoutesOnly field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetStaticRoutesOnlyOk() (bool, bool) {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret, false
	}
	return *o.StaticRoutesOnly, true
}

// HasStaticRoutesOnly returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasStaticRoutesOnly() bool {
	if o != nil && o.StaticRoutesOnly != nil {
		return true
	}

	return false
}

// SetStaticRoutesOnly gets a reference to the given bool and assigns it to the StaticRoutesOnly field.
func (o *FiltersVpnConnection) SetStaticRoutesOnly(v bool) {
	o.StaticRoutesOnly = &v
}

// GetVirtualGatewayIds returns the VirtualGatewayIds field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetVirtualGatewayIds() []string {
	if o == nil || o.VirtualGatewayIds == nil {
		var ret []string
		return ret
	}
	return *o.VirtualGatewayIds
}

// GetVirtualGatewayIdsOk returns a tuple with the VirtualGatewayIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetVirtualGatewayIdsOk() ([]string, bool) {
	if o == nil || o.VirtualGatewayIds == nil {
		var ret []string
		return ret, false
	}
	return *o.VirtualGatewayIds, true
}

// HasVirtualGatewayIds returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasVirtualGatewayIds() bool {
	if o != nil && o.VirtualGatewayIds != nil {
		return true
	}

	return false
}

// SetVirtualGatewayIds gets a reference to the given []string and assigns it to the VirtualGatewayIds field.
func (o *FiltersVpnConnection) SetVirtualGatewayIds(v []string) {
	o.VirtualGatewayIds = &v
}

// GetVpnConnectionIds returns the VpnConnectionIds field value if set, zero value otherwise.
func (o *FiltersVpnConnection) GetVpnConnectionIds() []string {
	if o == nil || o.VpnConnectionIds == nil {
		var ret []string
		return ret
	}
	return *o.VpnConnectionIds
}

// GetVpnConnectionIdsOk returns a tuple with the VpnConnectionIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVpnConnection) GetVpnConnectionIdsOk() ([]string, bool) {
	if o == nil || o.VpnConnectionIds == nil {
		var ret []string
		return ret, false
	}
	return *o.VpnConnectionIds, true
}

// HasVpnConnectionIds returns a boolean if a field has been set.
func (o *FiltersVpnConnection) HasVpnConnectionIds() bool {
	if o != nil && o.VpnConnectionIds != nil {
		return true
	}

	return false
}

// SetVpnConnectionIds gets a reference to the given []string and assigns it to the VpnConnectionIds field.
func (o *FiltersVpnConnection) SetVpnConnectionIds(v []string) {
	o.VpnConnectionIds = &v
}

type NullableFiltersVpnConnection struct {
	Value        FiltersVpnConnection
	ExplicitNull bool
}

func (v NullableFiltersVpnConnection) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableFiltersVpnConnection) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
