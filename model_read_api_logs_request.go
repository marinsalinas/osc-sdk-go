/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// ReadApiLogsRequest struct for ReadApiLogsRequest
type ReadApiLogsRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun  *bool          `json:"DryRun,omitempty"`
	Filters *FiltersApiLog `json:"Filters,omitempty"`
	// The token to request the next page of results.
	NextPageToken *string `json:"NextPageToken,omitempty"`
	// The maximum number of items returned in a single page. By default, 100.
	ResultsPerPage *int64 `json:"ResultsPerPage,omitempty"`
	With           *With  `json:"With,omitempty"`
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetDryRunOk() (bool, bool) {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret, false
	}
	return *o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *ReadApiLogsRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetFilters() FiltersApiLog {
	if o == nil || o.Filters == nil {
		var ret FiltersApiLog
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetFiltersOk() (FiltersApiLog, bool) {
	if o == nil || o.Filters == nil {
		var ret FiltersApiLog
		return ret, false
	}
	return *o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersApiLog and assigns it to the Filters field.
func (o *ReadApiLogsRequest) SetFilters(v FiltersApiLog) {
	o.Filters = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetNextPageTokenOk() (string, bool) {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret, false
	}
	return *o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ReadApiLogsRequest) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetResultsPerPage returns the ResultsPerPage field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetResultsPerPage() int64 {
	if o == nil || o.ResultsPerPage == nil {
		var ret int64
		return ret
	}
	return *o.ResultsPerPage
}

// GetResultsPerPageOk returns a tuple with the ResultsPerPage field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetResultsPerPageOk() (int64, bool) {
	if o == nil || o.ResultsPerPage == nil {
		var ret int64
		return ret, false
	}
	return *o.ResultsPerPage, true
}

// HasResultsPerPage returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasResultsPerPage() bool {
	if o != nil && o.ResultsPerPage != nil {
		return true
	}

	return false
}

// SetResultsPerPage gets a reference to the given int64 and assigns it to the ResultsPerPage field.
func (o *ReadApiLogsRequest) SetResultsPerPage(v int64) {
	o.ResultsPerPage = &v
}

// GetWith returns the With field value if set, zero value otherwise.
func (o *ReadApiLogsRequest) GetWith() With {
	if o == nil || o.With == nil {
		var ret With
		return ret
	}
	return *o.With
}

// GetWithOk returns a tuple with the With field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ReadApiLogsRequest) GetWithOk() (With, bool) {
	if o == nil || o.With == nil {
		var ret With
		return ret, false
	}
	return *o.With, true
}

// HasWith returns a boolean if a field has been set.
func (o *ReadApiLogsRequest) HasWith() bool {
	if o != nil && o.With != nil {
		return true
	}

	return false
}

// SetWith gets a reference to the given With and assigns it to the With field.
func (o *ReadApiLogsRequest) SetWith(v With) {
	o.With = &v
}

type NullableReadApiLogsRequest struct {
	Value        ReadApiLogsRequest
	ExplicitNull bool
}

func (v NullableReadApiLogsRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableReadApiLogsRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
