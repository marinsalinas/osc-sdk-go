/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// UpdateNicRequest struct for UpdateNicRequest
type UpdateNicRequest struct {
	// A new description for the NIC.
	Description *string `json:"Description,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun  *bool            `json:"DryRun,omitempty"`
	LinkNic *LinkNicToUpdate `json:"LinkNic,omitempty"`
	// The ID of the NIC you want to modify.
	NicId string `json:"NicId"`
	// One or more IDs of security groups for the NIC.<br /> You must specify at least one group, even if you use the default security group in the Net.
	SecurityGroupIds *[]string `json:"SecurityGroupIds,omitempty"`
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateNicRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetDryRunOk() (bool, bool) {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret, false
	}
	return *o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *UpdateNicRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetLinkNic returns the LinkNic field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetLinkNic() LinkNicToUpdate {
	if o == nil || o.LinkNic == nil {
		var ret LinkNicToUpdate
		return ret
	}
	return *o.LinkNic
}

// GetLinkNicOk returns a tuple with the LinkNic field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetLinkNicOk() (LinkNicToUpdate, bool) {
	if o == nil || o.LinkNic == nil {
		var ret LinkNicToUpdate
		return ret, false
	}
	return *o.LinkNic, true
}

// HasLinkNic returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasLinkNic() bool {
	if o != nil && o.LinkNic != nil {
		return true
	}

	return false
}

// SetLinkNic gets a reference to the given LinkNicToUpdate and assigns it to the LinkNic field.
func (o *UpdateNicRequest) SetLinkNic(v LinkNicToUpdate) {
	o.LinkNic = &v
}

// GetNicId returns the NicId field value
func (o *UpdateNicRequest) GetNicId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NicId
}

// SetNicId sets field value
func (o *UpdateNicRequest) SetNicId(v string) {
	o.NicId = v
}

// GetSecurityGroupIds returns the SecurityGroupIds field value if set, zero value otherwise.
func (o *UpdateNicRequest) GetSecurityGroupIds() []string {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret
	}
	return *o.SecurityGroupIds
}

// GetSecurityGroupIdsOk returns a tuple with the SecurityGroupIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNicRequest) GetSecurityGroupIdsOk() ([]string, bool) {
	if o == nil || o.SecurityGroupIds == nil {
		var ret []string
		return ret, false
	}
	return *o.SecurityGroupIds, true
}

// HasSecurityGroupIds returns a boolean if a field has been set.
func (o *UpdateNicRequest) HasSecurityGroupIds() bool {
	if o != nil && o.SecurityGroupIds != nil {
		return true
	}

	return false
}

// SetSecurityGroupIds gets a reference to the given []string and assigns it to the SecurityGroupIds field.
func (o *UpdateNicRequest) SetSecurityGroupIds(v []string) {
	o.SecurityGroupIds = &v
}

type NullableUpdateNicRequest struct {
	Value        UpdateNicRequest
	ExplicitNull bool
}

func (v NullableUpdateNicRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableUpdateNicRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
