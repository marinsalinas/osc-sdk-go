/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.1
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// InternetService Information about the Internet service.
type InternetService struct {
	// The ID of the Internet service.
	InternetServiceId *string `json:"InternetServiceId,omitempty"`
	// The ID of the Net attached to the Internet service.
	NetId *string `json:"NetId,omitempty"`
	// The state of the attachment of the Net to the Internet service (always `available`).
	State *string `json:"State,omitempty"`
	// One or more tags associated with the Internet service.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// GetInternetServiceId returns the InternetServiceId field value if set, zero value otherwise.
func (o *InternetService) GetInternetServiceId() string {
	if o == nil || o.InternetServiceId == nil {
		var ret string
		return ret
	}
	return *o.InternetServiceId
}

// GetInternetServiceIdOk returns a tuple with the InternetServiceId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetInternetServiceIdOk() (string, bool) {
	if o == nil || o.InternetServiceId == nil {
		var ret string
		return ret, false
	}
	return *o.InternetServiceId, true
}

// HasInternetServiceId returns a boolean if a field has been set.
func (o *InternetService) HasInternetServiceId() bool {
	if o != nil && o.InternetServiceId != nil {
		return true
	}

	return false
}

// SetInternetServiceId gets a reference to the given string and assigns it to the InternetServiceId field.
func (o *InternetService) SetInternetServiceId(v string) {
	o.InternetServiceId = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *InternetService) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetNetIdOk() (string, bool) {
	if o == nil || o.NetId == nil {
		var ret string
		return ret, false
	}
	return *o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *InternetService) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *InternetService) SetNetId(v string) {
	o.NetId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InternetService) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetStateOk() (string, bool) {
	if o == nil || o.State == nil {
		var ret string
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InternetService) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InternetService) SetState(v string) {
	o.State = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *InternetService) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *InternetService) GetTagsOk() ([]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret, false
	}
	return *o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *InternetService) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *InternetService) SetTags(v []ResourceTag) {
	o.Tags = &v
}

type NullableInternetService struct {
	Value        InternetService
	ExplicitNull bool
}

func (v NullableInternetService) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableInternetService) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
