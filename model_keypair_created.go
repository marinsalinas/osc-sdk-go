/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"bytes"
	"encoding/json"
)

// KeypairCreated Information about the created keypair.
type KeypairCreated struct {
	// If you create a keypair, the SHA-1 digest of the DER encoded private key.<br /> If you import a keypair, the MD5 public key fingerprint as specified in section 4 of RFC 4716.
	KeypairFingerprint *string `json:"KeypairFingerprint,omitempty"`
	// The name of the keypair.
	KeypairName *string `json:"KeypairName,omitempty"`
	// The private key.
	PrivateKey *string `json:"PrivateKey,omitempty"`
}

// GetKeypairFingerprint returns the KeypairFingerprint field value if set, zero value otherwise.
func (o *KeypairCreated) GetKeypairFingerprint() string {
	if o == nil || o.KeypairFingerprint == nil {
		var ret string
		return ret
	}
	return *o.KeypairFingerprint
}

// GetKeypairFingerprintOk returns a tuple with the KeypairFingerprint field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *KeypairCreated) GetKeypairFingerprintOk() (string, bool) {
	if o == nil || o.KeypairFingerprint == nil {
		var ret string
		return ret, false
	}
	return *o.KeypairFingerprint, true
}

// HasKeypairFingerprint returns a boolean if a field has been set.
func (o *KeypairCreated) HasKeypairFingerprint() bool {
	if o != nil && o.KeypairFingerprint != nil {
		return true
	}

	return false
}

// SetKeypairFingerprint gets a reference to the given string and assigns it to the KeypairFingerprint field.
func (o *KeypairCreated) SetKeypairFingerprint(v string) {
	o.KeypairFingerprint = &v
}

// GetKeypairName returns the KeypairName field value if set, zero value otherwise.
func (o *KeypairCreated) GetKeypairName() string {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret
	}
	return *o.KeypairName
}

// GetKeypairNameOk returns a tuple with the KeypairName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *KeypairCreated) GetKeypairNameOk() (string, bool) {
	if o == nil || o.KeypairName == nil {
		var ret string
		return ret, false
	}
	return *o.KeypairName, true
}

// HasKeypairName returns a boolean if a field has been set.
func (o *KeypairCreated) HasKeypairName() bool {
	if o != nil && o.KeypairName != nil {
		return true
	}

	return false
}

// SetKeypairName gets a reference to the given string and assigns it to the KeypairName field.
func (o *KeypairCreated) SetKeypairName(v string) {
	o.KeypairName = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *KeypairCreated) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *KeypairCreated) GetPrivateKeyOk() (string, bool) {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret, false
	}
	return *o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *KeypairCreated) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *KeypairCreated) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

type NullableKeypairCreated struct {
	Value KeypairCreated
	ExplicitNull bool
}

func (v NullableKeypairCreated) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}	
}

func (v *NullableKeypairCreated) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

