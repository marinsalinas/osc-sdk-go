/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.1
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// PermissionsOnResourceCreation Information about the permissions for the resource.
type PermissionsOnResourceCreation struct {
	Additions *PermissionsOnResource `json:"Additions,omitempty"`
	Removals  *PermissionsOnResource `json:"Removals,omitempty"`
}

// GetAdditions returns the Additions field value if set, zero value otherwise.
func (o *PermissionsOnResourceCreation) GetAdditions() PermissionsOnResource {
	if o == nil || o.Additions == nil {
		var ret PermissionsOnResource
		return ret
	}
	return *o.Additions
}

// GetAdditionsOk returns a tuple with the Additions field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsOnResourceCreation) GetAdditionsOk() (PermissionsOnResource, bool) {
	if o == nil || o.Additions == nil {
		var ret PermissionsOnResource
		return ret, false
	}
	return *o.Additions, true
}

// HasAdditions returns a boolean if a field has been set.
func (o *PermissionsOnResourceCreation) HasAdditions() bool {
	if o != nil && o.Additions != nil {
		return true
	}

	return false
}

// SetAdditions gets a reference to the given PermissionsOnResource and assigns it to the Additions field.
func (o *PermissionsOnResourceCreation) SetAdditions(v PermissionsOnResource) {
	o.Additions = &v
}

// GetRemovals returns the Removals field value if set, zero value otherwise.
func (o *PermissionsOnResourceCreation) GetRemovals() PermissionsOnResource {
	if o == nil || o.Removals == nil {
		var ret PermissionsOnResource
		return ret
	}
	return *o.Removals
}

// GetRemovalsOk returns a tuple with the Removals field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *PermissionsOnResourceCreation) GetRemovalsOk() (PermissionsOnResource, bool) {
	if o == nil || o.Removals == nil {
		var ret PermissionsOnResource
		return ret, false
	}
	return *o.Removals, true
}

// HasRemovals returns a boolean if a field has been set.
func (o *PermissionsOnResourceCreation) HasRemovals() bool {
	if o != nil && o.Removals != nil {
		return true
	}

	return false
}

// SetRemovals gets a reference to the given PermissionsOnResource and assigns it to the Removals field.
func (o *PermissionsOnResourceCreation) SetRemovals(v PermissionsOnResource) {
	o.Removals = &v
}

type NullablePermissionsOnResourceCreation struct {
	Value        PermissionsOnResourceCreation
	ExplicitNull bool
}

func (v NullablePermissionsOnResourceCreation) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullablePermissionsOnResourceCreation) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
