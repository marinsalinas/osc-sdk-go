/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// RouteTable Information about the route table.
type RouteTable struct {
	// One or more associations between the route table and Subnets.
	LinkRouteTables *[]LinkRouteTable `json:"LinkRouteTables,omitempty"`
	// The ID of the Net for the route table.
	NetId *string `json:"NetId,omitempty"`
	// Information about virtual gateways propagating routes.
	RoutePropagatingVirtualGateways *[]RoutePropagatingVirtualGateway `json:"RoutePropagatingVirtualGateways,omitempty"`
	// The ID of the route table.
	RouteTableId *string `json:"RouteTableId,omitempty"`
	// One or more routes in the route table.
	Routes *[]Route `json:"Routes,omitempty"`
	// One or more tags associated with the route table.
	Tags *[]ResourceTag `json:"Tags,omitempty"`
}

// GetLinkRouteTables returns the LinkRouteTables field value if set, zero value otherwise.
func (o *RouteTable) GetLinkRouteTables() []LinkRouteTable {
	if o == nil || o.LinkRouteTables == nil {
		var ret []LinkRouteTable
		return ret
	}
	return *o.LinkRouteTables
}

// GetLinkRouteTablesOk returns a tuple with the LinkRouteTables field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetLinkRouteTablesOk() ([]LinkRouteTable, bool) {
	if o == nil || o.LinkRouteTables == nil {
		var ret []LinkRouteTable
		return ret, false
	}
	return *o.LinkRouteTables, true
}

// HasLinkRouteTables returns a boolean if a field has been set.
func (o *RouteTable) HasLinkRouteTables() bool {
	if o != nil && o.LinkRouteTables != nil {
		return true
	}

	return false
}

// SetLinkRouteTables gets a reference to the given []LinkRouteTable and assigns it to the LinkRouteTables field.
func (o *RouteTable) SetLinkRouteTables(v []LinkRouteTable) {
	o.LinkRouteTables = &v
}

// GetNetId returns the NetId field value if set, zero value otherwise.
func (o *RouteTable) GetNetId() string {
	if o == nil || o.NetId == nil {
		var ret string
		return ret
	}
	return *o.NetId
}

// GetNetIdOk returns a tuple with the NetId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetNetIdOk() (string, bool) {
	if o == nil || o.NetId == nil {
		var ret string
		return ret, false
	}
	return *o.NetId, true
}

// HasNetId returns a boolean if a field has been set.
func (o *RouteTable) HasNetId() bool {
	if o != nil && o.NetId != nil {
		return true
	}

	return false
}

// SetNetId gets a reference to the given string and assigns it to the NetId field.
func (o *RouteTable) SetNetId(v string) {
	o.NetId = &v
}

// GetRoutePropagatingVirtualGateways returns the RoutePropagatingVirtualGateways field value if set, zero value otherwise.
func (o *RouteTable) GetRoutePropagatingVirtualGateways() []RoutePropagatingVirtualGateway {
	if o == nil || o.RoutePropagatingVirtualGateways == nil {
		var ret []RoutePropagatingVirtualGateway
		return ret
	}
	return *o.RoutePropagatingVirtualGateways
}

// GetRoutePropagatingVirtualGatewaysOk returns a tuple with the RoutePropagatingVirtualGateways field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetRoutePropagatingVirtualGatewaysOk() ([]RoutePropagatingVirtualGateway, bool) {
	if o == nil || o.RoutePropagatingVirtualGateways == nil {
		var ret []RoutePropagatingVirtualGateway
		return ret, false
	}
	return *o.RoutePropagatingVirtualGateways, true
}

// HasRoutePropagatingVirtualGateways returns a boolean if a field has been set.
func (o *RouteTable) HasRoutePropagatingVirtualGateways() bool {
	if o != nil && o.RoutePropagatingVirtualGateways != nil {
		return true
	}

	return false
}

// SetRoutePropagatingVirtualGateways gets a reference to the given []RoutePropagatingVirtualGateway and assigns it to the RoutePropagatingVirtualGateways field.
func (o *RouteTable) SetRoutePropagatingVirtualGateways(v []RoutePropagatingVirtualGateway) {
	o.RoutePropagatingVirtualGateways = &v
}

// GetRouteTableId returns the RouteTableId field value if set, zero value otherwise.
func (o *RouteTable) GetRouteTableId() string {
	if o == nil || o.RouteTableId == nil {
		var ret string
		return ret
	}
	return *o.RouteTableId
}

// GetRouteTableIdOk returns a tuple with the RouteTableId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetRouteTableIdOk() (string, bool) {
	if o == nil || o.RouteTableId == nil {
		var ret string
		return ret, false
	}
	return *o.RouteTableId, true
}

// HasRouteTableId returns a boolean if a field has been set.
func (o *RouteTable) HasRouteTableId() bool {
	if o != nil && o.RouteTableId != nil {
		return true
	}

	return false
}

// SetRouteTableId gets a reference to the given string and assigns it to the RouteTableId field.
func (o *RouteTable) SetRouteTableId(v string) {
	o.RouteTableId = &v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *RouteTable) GetRoutes() []Route {
	if o == nil || o.Routes == nil {
		var ret []Route
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetRoutesOk() ([]Route, bool) {
	if o == nil || o.Routes == nil {
		var ret []Route
		return ret, false
	}
	return *o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *RouteTable) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []Route and assigns it to the Routes field.
func (o *RouteTable) SetRoutes(v []Route) {
	o.Routes = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *RouteTable) GetTags() []ResourceTag {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *RouteTable) GetTagsOk() ([]ResourceTag, bool) {
	if o == nil || o.Tags == nil {
		var ret []ResourceTag
		return ret, false
	}
	return *o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *RouteTable) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []ResourceTag and assigns it to the Tags field.
func (o *RouteTable) SetTags(v []ResourceTag) {
	o.Tags = &v
}

type NullableRouteTable struct {
	Value        RouteTable
	ExplicitNull bool
}

func (v NullableRouteTable) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableRouteTable) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
