/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// FlexibleGpu Information about the flexible GPU (fGPU).
type FlexibleGpu struct {
	// If `true`, the fGPU is deleted when the VM is terminated.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// The ID of the fGPU.
	FlexibleGpuId *string `json:"FlexibleGpuId,omitempty"`
	// The model of fGPU. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).
	ModelName *string `json:"ModelName,omitempty"`
	// The state of the fGPU (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).
	State *string `json:"State,omitempty"`
	// The Subregion where the fGPU is located.
	SubregionName *string `json:"SubregionName,omitempty"`
	// The ID of the VM the fGPU is attached to, if any.
	VmId *string `json:"VmId,omitempty"`
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FlexibleGpu) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetDeleteOnVmDeletionOk() (bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret, false
	}
	return *o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FlexibleGpu) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *FlexibleGpu) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetFlexibleGpuId returns the FlexibleGpuId field value if set, zero value otherwise.
func (o *FlexibleGpu) GetFlexibleGpuId() string {
	if o == nil || o.FlexibleGpuId == nil {
		var ret string
		return ret
	}
	return *o.FlexibleGpuId
}

// GetFlexibleGpuIdOk returns a tuple with the FlexibleGpuId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetFlexibleGpuIdOk() (string, bool) {
	if o == nil || o.FlexibleGpuId == nil {
		var ret string
		return ret, false
	}
	return *o.FlexibleGpuId, true
}

// HasFlexibleGpuId returns a boolean if a field has been set.
func (o *FlexibleGpu) HasFlexibleGpuId() bool {
	if o != nil && o.FlexibleGpuId != nil {
		return true
	}

	return false
}

// SetFlexibleGpuId gets a reference to the given string and assigns it to the FlexibleGpuId field.
func (o *FlexibleGpu) SetFlexibleGpuId(v string) {
	o.FlexibleGpuId = &v
}

// GetModelName returns the ModelName field value if set, zero value otherwise.
func (o *FlexibleGpu) GetModelName() string {
	if o == nil || o.ModelName == nil {
		var ret string
		return ret
	}
	return *o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetModelNameOk() (string, bool) {
	if o == nil || o.ModelName == nil {
		var ret string
		return ret, false
	}
	return *o.ModelName, true
}

// HasModelName returns a boolean if a field has been set.
func (o *FlexibleGpu) HasModelName() bool {
	if o != nil && o.ModelName != nil {
		return true
	}

	return false
}

// SetModelName gets a reference to the given string and assigns it to the ModelName field.
func (o *FlexibleGpu) SetModelName(v string) {
	o.ModelName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *FlexibleGpu) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetStateOk() (string, bool) {
	if o == nil || o.State == nil {
		var ret string
		return ret, false
	}
	return *o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *FlexibleGpu) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *FlexibleGpu) SetState(v string) {
	o.State = &v
}

// GetSubregionName returns the SubregionName field value if set, zero value otherwise.
func (o *FlexibleGpu) GetSubregionName() string {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret
	}
	return *o.SubregionName
}

// GetSubregionNameOk returns a tuple with the SubregionName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetSubregionNameOk() (string, bool) {
	if o == nil || o.SubregionName == nil {
		var ret string
		return ret, false
	}
	return *o.SubregionName, true
}

// HasSubregionName returns a boolean if a field has been set.
func (o *FlexibleGpu) HasSubregionName() bool {
	if o != nil && o.SubregionName != nil {
		return true
	}

	return false
}

// SetSubregionName gets a reference to the given string and assigns it to the SubregionName field.
func (o *FlexibleGpu) SetSubregionName(v string) {
	o.SubregionName = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *FlexibleGpu) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FlexibleGpu) GetVmIdOk() (string, bool) {
	if o == nil || o.VmId == nil {
		var ret string
		return ret, false
	}
	return *o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *FlexibleGpu) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *FlexibleGpu) SetVmId(v string) {
	o.VmId = &v
}

type NullableFlexibleGpu struct {
	Value        FlexibleGpu
	ExplicitNull bool
}

func (v NullableFlexibleGpu) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableFlexibleGpu) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
