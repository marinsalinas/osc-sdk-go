/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// CreateKeypairRequest struct for CreateKeypairRequest
type CreateKeypairRequest struct {
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
	KeypairName string `json:"KeypairName"`
	// The public key. If you are not using command line tools, it must be encoded in Base64.
	PublicKey *string `json:"PublicKey,omitempty"`
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateKeypairRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateKeypairRequest) GetDryRunOk() (bool, bool) {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret, false
	}
	return *o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateKeypairRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateKeypairRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetKeypairName returns the KeypairName field value
func (o *CreateKeypairRequest) GetKeypairName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeypairName
}

// SetKeypairName sets field value
func (o *CreateKeypairRequest) SetKeypairName(v string) {
	o.KeypairName = v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *CreateKeypairRequest) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateKeypairRequest) GetPublicKeyOk() (string, bool) {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret, false
	}
	return *o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *CreateKeypairRequest) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *CreateKeypairRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

type NullableCreateKeypairRequest struct {
	Value        CreateKeypairRequest
	ExplicitNull bool
}

func (v NullableCreateKeypairRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCreateKeypairRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
