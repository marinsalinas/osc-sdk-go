/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.1
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// FiltersFlexibleGpu One or more filters.
type FiltersFlexibleGpu struct {
	// Indicates whether the fGPU is deleted when terminating the VM.
	DeleteOnVmDeletion *bool `json:"DeleteOnVmDeletion,omitempty"`
	// One or more IDs of fGPUs.
	FlexibleGpuIds *[]string `json:"FlexibleGpuIds,omitempty"`
	// One or more models of fGPUs. For more information, see [About Flexible GPUs](https://wiki.outscale.net/display/EN/About+Flexible+GPUs).
	ModelNames *[]string `json:"ModelNames,omitempty"`
	// The states of the fGPUs (`allocated` \\| `attaching` \\| `attached` \\| `detaching`).
	States *[]string `json:"States,omitempty"`
	// The Subregions where the fGPUs are located.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// One or more IDs of VMs.
	VmIds *[]string `json:"VmIds,omitempty"`
}

// GetDeleteOnVmDeletion returns the DeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetDeleteOnVmDeletion() bool {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.DeleteOnVmDeletion
}

// GetDeleteOnVmDeletionOk returns a tuple with the DeleteOnVmDeletion field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetDeleteOnVmDeletionOk() (bool, bool) {
	if o == nil || o.DeleteOnVmDeletion == nil {
		var ret bool
		return ret, false
	}
	return *o.DeleteOnVmDeletion, true
}

// HasDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasDeleteOnVmDeletion() bool {
	if o != nil && o.DeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetDeleteOnVmDeletion gets a reference to the given bool and assigns it to the DeleteOnVmDeletion field.
func (o *FiltersFlexibleGpu) SetDeleteOnVmDeletion(v bool) {
	o.DeleteOnVmDeletion = &v
}

// GetFlexibleGpuIds returns the FlexibleGpuIds field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetFlexibleGpuIds() []string {
	if o == nil || o.FlexibleGpuIds == nil {
		var ret []string
		return ret
	}
	return *o.FlexibleGpuIds
}

// GetFlexibleGpuIdsOk returns a tuple with the FlexibleGpuIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetFlexibleGpuIdsOk() ([]string, bool) {
	if o == nil || o.FlexibleGpuIds == nil {
		var ret []string
		return ret, false
	}
	return *o.FlexibleGpuIds, true
}

// HasFlexibleGpuIds returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasFlexibleGpuIds() bool {
	if o != nil && o.FlexibleGpuIds != nil {
		return true
	}

	return false
}

// SetFlexibleGpuIds gets a reference to the given []string and assigns it to the FlexibleGpuIds field.
func (o *FiltersFlexibleGpu) SetFlexibleGpuIds(v []string) {
	o.FlexibleGpuIds = &v
}

// GetModelNames returns the ModelNames field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetModelNames() []string {
	if o == nil || o.ModelNames == nil {
		var ret []string
		return ret
	}
	return *o.ModelNames
}

// GetModelNamesOk returns a tuple with the ModelNames field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetModelNamesOk() ([]string, bool) {
	if o == nil || o.ModelNames == nil {
		var ret []string
		return ret, false
	}
	return *o.ModelNames, true
}

// HasModelNames returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasModelNames() bool {
	if o != nil && o.ModelNames != nil {
		return true
	}

	return false
}

// SetModelNames gets a reference to the given []string and assigns it to the ModelNames field.
func (o *FiltersFlexibleGpu) SetModelNames(v []string) {
	o.ModelNames = &v
}

// GetStates returns the States field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetStates() []string {
	if o == nil || o.States == nil {
		var ret []string
		return ret
	}
	return *o.States
}

// GetStatesOk returns a tuple with the States field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetStatesOk() ([]string, bool) {
	if o == nil || o.States == nil {
		var ret []string
		return ret, false
	}
	return *o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasStates() bool {
	if o != nil && o.States != nil {
		return true
	}

	return false
}

// SetStates gets a reference to the given []string and assigns it to the States field.
func (o *FiltersFlexibleGpu) SetStates(v []string) {
	o.States = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetSubregionNamesOk() ([]string, bool) {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret, false
	}
	return *o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersFlexibleGpu) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetVmIds returns the VmIds field value if set, zero value otherwise.
func (o *FiltersFlexibleGpu) GetVmIds() []string {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret
	}
	return *o.VmIds
}

// GetVmIdsOk returns a tuple with the VmIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersFlexibleGpu) GetVmIdsOk() ([]string, bool) {
	if o == nil || o.VmIds == nil {
		var ret []string
		return ret, false
	}
	return *o.VmIds, true
}

// HasVmIds returns a boolean if a field has been set.
func (o *FiltersFlexibleGpu) HasVmIds() bool {
	if o != nil && o.VmIds != nil {
		return true
	}

	return false
}

// SetVmIds gets a reference to the given []string and assigns it to the VmIds field.
func (o *FiltersFlexibleGpu) SetVmIds(v []string) {
	o.VmIds = &v
}

type NullableFiltersFlexibleGpu struct {
	Value        FiltersFlexibleGpu
	ExplicitNull bool
}

func (v NullableFiltersFlexibleGpu) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableFiltersFlexibleGpu) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
