/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.1
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// ListenerRuleForCreation Information about the listener rule.
type ListenerRuleForCreation struct {
	// The type of action for the rule (always `forward`).
	Action *string `json:"Action,omitempty"`
	// A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].
	HostNamePattern *string `json:"HostNamePattern,omitempty"`
	// The ID of the listener.
	ListenerRuleId *string `json:"ListenerRuleId,omitempty"`
	// A human-readable name for the listener rule.
	ListenerRuleName *string `json:"ListenerRuleName,omitempty"`
	// A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~\"'@:+?].
	PathPattern *string `json:"PathPattern,omitempty"`
	// The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
	Priority int64 `json:"Priority"`
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetAction() string {
	if o == nil || o.Action == nil {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetActionOk() (string, bool) {
	if o == nil || o.Action == nil {
		var ret string
		return ret, false
	}
	return *o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ListenerRuleForCreation) SetAction(v string) {
	o.Action = &v
}

// GetHostNamePattern returns the HostNamePattern field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetHostNamePattern() string {
	if o == nil || o.HostNamePattern == nil {
		var ret string
		return ret
	}
	return *o.HostNamePattern
}

// GetHostNamePatternOk returns a tuple with the HostNamePattern field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetHostNamePatternOk() (string, bool) {
	if o == nil || o.HostNamePattern == nil {
		var ret string
		return ret, false
	}
	return *o.HostNamePattern, true
}

// HasHostNamePattern returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasHostNamePattern() bool {
	if o != nil && o.HostNamePattern != nil {
		return true
	}

	return false
}

// SetHostNamePattern gets a reference to the given string and assigns it to the HostNamePattern field.
func (o *ListenerRuleForCreation) SetHostNamePattern(v string) {
	o.HostNamePattern = &v
}

// GetListenerRuleId returns the ListenerRuleId field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetListenerRuleId() string {
	if o == nil || o.ListenerRuleId == nil {
		var ret string
		return ret
	}
	return *o.ListenerRuleId
}

// GetListenerRuleIdOk returns a tuple with the ListenerRuleId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetListenerRuleIdOk() (string, bool) {
	if o == nil || o.ListenerRuleId == nil {
		var ret string
		return ret, false
	}
	return *o.ListenerRuleId, true
}

// HasListenerRuleId returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasListenerRuleId() bool {
	if o != nil && o.ListenerRuleId != nil {
		return true
	}

	return false
}

// SetListenerRuleId gets a reference to the given string and assigns it to the ListenerRuleId field.
func (o *ListenerRuleForCreation) SetListenerRuleId(v string) {
	o.ListenerRuleId = &v
}

// GetListenerRuleName returns the ListenerRuleName field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetListenerRuleName() string {
	if o == nil || o.ListenerRuleName == nil {
		var ret string
		return ret
	}
	return *o.ListenerRuleName
}

// GetListenerRuleNameOk returns a tuple with the ListenerRuleName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetListenerRuleNameOk() (string, bool) {
	if o == nil || o.ListenerRuleName == nil {
		var ret string
		return ret, false
	}
	return *o.ListenerRuleName, true
}

// HasListenerRuleName returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasListenerRuleName() bool {
	if o != nil && o.ListenerRuleName != nil {
		return true
	}

	return false
}

// SetListenerRuleName gets a reference to the given string and assigns it to the ListenerRuleName field.
func (o *ListenerRuleForCreation) SetListenerRuleName(v string) {
	o.ListenerRuleName = &v
}

// GetPathPattern returns the PathPattern field value if set, zero value otherwise.
func (o *ListenerRuleForCreation) GetPathPattern() string {
	if o == nil || o.PathPattern == nil {
		var ret string
		return ret
	}
	return *o.PathPattern
}

// GetPathPatternOk returns a tuple with the PathPattern field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *ListenerRuleForCreation) GetPathPatternOk() (string, bool) {
	if o == nil || o.PathPattern == nil {
		var ret string
		return ret, false
	}
	return *o.PathPattern, true
}

// HasPathPattern returns a boolean if a field has been set.
func (o *ListenerRuleForCreation) HasPathPattern() bool {
	if o != nil && o.PathPattern != nil {
		return true
	}

	return false
}

// SetPathPattern gets a reference to the given string and assigns it to the PathPattern field.
func (o *ListenerRuleForCreation) SetPathPattern(v string) {
	o.PathPattern = &v
}

// GetPriority returns the Priority field value
func (o *ListenerRuleForCreation) GetPriority() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Priority
}

// SetPriority sets field value
func (o *ListenerRuleForCreation) SetPriority(v int64) {
	o.Priority = v
}

type NullableListenerRuleForCreation struct {
	Value        ListenerRuleForCreation
	ExplicitNull bool
}

func (v NullableListenerRuleForCreation) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableListenerRuleForCreation) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
