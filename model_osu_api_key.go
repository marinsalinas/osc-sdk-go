/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 1.1
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// OsuApiKey Information about the OSU API key.
type OsuApiKey struct {
	// The API key of the OSU account that enables you to access the bucket.
	ApiKeyId *string `json:"ApiKeyId,omitempty"`
	// The secret key of the OSU account that enables you to access the bucket.
	SecretKey *string `json:"SecretKey,omitempty"`
}

// GetApiKeyId returns the ApiKeyId field value if set, zero value otherwise.
func (o *OsuApiKey) GetApiKeyId() string {
	if o == nil || o.ApiKeyId == nil {
		var ret string
		return ret
	}
	return *o.ApiKeyId
}

// GetApiKeyIdOk returns a tuple with the ApiKeyId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OsuApiKey) GetApiKeyIdOk() (string, bool) {
	if o == nil || o.ApiKeyId == nil {
		var ret string
		return ret, false
	}
	return *o.ApiKeyId, true
}

// HasApiKeyId returns a boolean if a field has been set.
func (o *OsuApiKey) HasApiKeyId() bool {
	if o != nil && o.ApiKeyId != nil {
		return true
	}

	return false
}

// SetApiKeyId gets a reference to the given string and assigns it to the ApiKeyId field.
func (o *OsuApiKey) SetApiKeyId(v string) {
	o.ApiKeyId = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *OsuApiKey) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *OsuApiKey) GetSecretKeyOk() (string, bool) {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret, false
	}
	return *o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *OsuApiKey) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *OsuApiKey) SetSecretKey(v string) {
	o.SecretKey = &v
}

type NullableOsuApiKey struct {
	Value        OsuApiKey
	ExplicitNull bool
}

func (v NullableOsuApiKey) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableOsuApiKey) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
