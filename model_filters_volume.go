/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// FiltersVolume One or more filters.
type FiltersVolume struct {
	// The dates and times at which the volumes were created.
	CreationDates *[]string `json:"CreationDates,omitempty"`
	// Indicates whether the volumes are deleted when terminating the VMs.
	LinkVolumeDeleteOnVmDeletion *bool `json:"LinkVolumeDeleteOnVmDeletion,omitempty"`
	// The VM device names.
	LinkVolumeDeviceNames *[]string `json:"LinkVolumeDeviceNames,omitempty"`
	// The dates and times at which the volumes were created.
	LinkVolumeLinkDates *[]string `json:"LinkVolumeLinkDates,omitempty"`
	// The attachment states of the volumes (`attaching` \\| `detaching` \\| `attached` \\| `detached`).
	LinkVolumeLinkStates *[]string `json:"LinkVolumeLinkStates,omitempty"`
	// One or more IDs of VMs.
	LinkVolumeVmIds *[]string `json:"LinkVolumeVmIds,omitempty"`
	// The snapshots from which the volumes were created.
	SnapshotIds *[]string `json:"SnapshotIds,omitempty"`
	// The names of the Subregions in which the volumes were created.
	SubregionNames *[]string `json:"SubregionNames,omitempty"`
	// The keys of the tags associated with the volumes.
	TagKeys *[]string `json:"TagKeys,omitempty"`
	// The values of the tags associated with the volumes.
	TagValues *[]string `json:"TagValues,omitempty"`
	// The key/value combination of the tags associated with the volumes, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.
	Tags *[]string `json:"Tags,omitempty"`
	// The IDs of the volumes.
	VolumeIds *[]string `json:"VolumeIds,omitempty"`
	// The sizes of the volumes, in gibibytes (GiB).
	VolumeSizes *[]int32 `json:"VolumeSizes,omitempty"`
	// The states of the volumes (`creating` \\| `available` \\| `in-use` \\| `deleting` \\| `error`).
	VolumeStates *[]string `json:"VolumeStates,omitempty"`
	// The types of the volumes (`standard` \\| `gp2` \\| `io1`).
	VolumeTypes *[]string `json:"VolumeTypes,omitempty"`
}

// GetCreationDates returns the CreationDates field value if set, zero value otherwise.
func (o *FiltersVolume) GetCreationDates() []string {
	if o == nil || o.CreationDates == nil {
		var ret []string
		return ret
	}
	return *o.CreationDates
}

// GetCreationDatesOk returns a tuple with the CreationDates field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetCreationDatesOk() ([]string, bool) {
	if o == nil || o.CreationDates == nil {
		var ret []string
		return ret, false
	}
	return *o.CreationDates, true
}

// HasCreationDates returns a boolean if a field has been set.
func (o *FiltersVolume) HasCreationDates() bool {
	if o != nil && o.CreationDates != nil {
		return true
	}

	return false
}

// SetCreationDates gets a reference to the given []string and assigns it to the CreationDates field.
func (o *FiltersVolume) SetCreationDates(v []string) {
	o.CreationDates = &v
}

// GetLinkVolumeDeleteOnVmDeletion returns the LinkVolumeDeleteOnVmDeletion field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeDeleteOnVmDeletion() bool {
	if o == nil || o.LinkVolumeDeleteOnVmDeletion == nil {
		var ret bool
		return ret
	}
	return *o.LinkVolumeDeleteOnVmDeletion
}

// GetLinkVolumeDeleteOnVmDeletionOk returns a tuple with the LinkVolumeDeleteOnVmDeletion field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeDeleteOnVmDeletionOk() (bool, bool) {
	if o == nil || o.LinkVolumeDeleteOnVmDeletion == nil {
		var ret bool
		return ret, false
	}
	return *o.LinkVolumeDeleteOnVmDeletion, true
}

// HasLinkVolumeDeleteOnVmDeletion returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeDeleteOnVmDeletion() bool {
	if o != nil && o.LinkVolumeDeleteOnVmDeletion != nil {
		return true
	}

	return false
}

// SetLinkVolumeDeleteOnVmDeletion gets a reference to the given bool and assigns it to the LinkVolumeDeleteOnVmDeletion field.
func (o *FiltersVolume) SetLinkVolumeDeleteOnVmDeletion(v bool) {
	o.LinkVolumeDeleteOnVmDeletion = &v
}

// GetLinkVolumeDeviceNames returns the LinkVolumeDeviceNames field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeDeviceNames() []string {
	if o == nil || o.LinkVolumeDeviceNames == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeDeviceNames
}

// GetLinkVolumeDeviceNamesOk returns a tuple with the LinkVolumeDeviceNames field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeDeviceNamesOk() ([]string, bool) {
	if o == nil || o.LinkVolumeDeviceNames == nil {
		var ret []string
		return ret, false
	}
	return *o.LinkVolumeDeviceNames, true
}

// HasLinkVolumeDeviceNames returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeDeviceNames() bool {
	if o != nil && o.LinkVolumeDeviceNames != nil {
		return true
	}

	return false
}

// SetLinkVolumeDeviceNames gets a reference to the given []string and assigns it to the LinkVolumeDeviceNames field.
func (o *FiltersVolume) SetLinkVolumeDeviceNames(v []string) {
	o.LinkVolumeDeviceNames = &v
}

// GetLinkVolumeLinkDates returns the LinkVolumeLinkDates field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeLinkDates() []string {
	if o == nil || o.LinkVolumeLinkDates == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeLinkDates
}

// GetLinkVolumeLinkDatesOk returns a tuple with the LinkVolumeLinkDates field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeLinkDatesOk() ([]string, bool) {
	if o == nil || o.LinkVolumeLinkDates == nil {
		var ret []string
		return ret, false
	}
	return *o.LinkVolumeLinkDates, true
}

// HasLinkVolumeLinkDates returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeLinkDates() bool {
	if o != nil && o.LinkVolumeLinkDates != nil {
		return true
	}

	return false
}

// SetLinkVolumeLinkDates gets a reference to the given []string and assigns it to the LinkVolumeLinkDates field.
func (o *FiltersVolume) SetLinkVolumeLinkDates(v []string) {
	o.LinkVolumeLinkDates = &v
}

// GetLinkVolumeLinkStates returns the LinkVolumeLinkStates field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeLinkStates() []string {
	if o == nil || o.LinkVolumeLinkStates == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeLinkStates
}

// GetLinkVolumeLinkStatesOk returns a tuple with the LinkVolumeLinkStates field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeLinkStatesOk() ([]string, bool) {
	if o == nil || o.LinkVolumeLinkStates == nil {
		var ret []string
		return ret, false
	}
	return *o.LinkVolumeLinkStates, true
}

// HasLinkVolumeLinkStates returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeLinkStates() bool {
	if o != nil && o.LinkVolumeLinkStates != nil {
		return true
	}

	return false
}

// SetLinkVolumeLinkStates gets a reference to the given []string and assigns it to the LinkVolumeLinkStates field.
func (o *FiltersVolume) SetLinkVolumeLinkStates(v []string) {
	o.LinkVolumeLinkStates = &v
}

// GetLinkVolumeVmIds returns the LinkVolumeVmIds field value if set, zero value otherwise.
func (o *FiltersVolume) GetLinkVolumeVmIds() []string {
	if o == nil || o.LinkVolumeVmIds == nil {
		var ret []string
		return ret
	}
	return *o.LinkVolumeVmIds
}

// GetLinkVolumeVmIdsOk returns a tuple with the LinkVolumeVmIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetLinkVolumeVmIdsOk() ([]string, bool) {
	if o == nil || o.LinkVolumeVmIds == nil {
		var ret []string
		return ret, false
	}
	return *o.LinkVolumeVmIds, true
}

// HasLinkVolumeVmIds returns a boolean if a field has been set.
func (o *FiltersVolume) HasLinkVolumeVmIds() bool {
	if o != nil && o.LinkVolumeVmIds != nil {
		return true
	}

	return false
}

// SetLinkVolumeVmIds gets a reference to the given []string and assigns it to the LinkVolumeVmIds field.
func (o *FiltersVolume) SetLinkVolumeVmIds(v []string) {
	o.LinkVolumeVmIds = &v
}

// GetSnapshotIds returns the SnapshotIds field value if set, zero value otherwise.
func (o *FiltersVolume) GetSnapshotIds() []string {
	if o == nil || o.SnapshotIds == nil {
		var ret []string
		return ret
	}
	return *o.SnapshotIds
}

// GetSnapshotIdsOk returns a tuple with the SnapshotIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetSnapshotIdsOk() ([]string, bool) {
	if o == nil || o.SnapshotIds == nil {
		var ret []string
		return ret, false
	}
	return *o.SnapshotIds, true
}

// HasSnapshotIds returns a boolean if a field has been set.
func (o *FiltersVolume) HasSnapshotIds() bool {
	if o != nil && o.SnapshotIds != nil {
		return true
	}

	return false
}

// SetSnapshotIds gets a reference to the given []string and assigns it to the SnapshotIds field.
func (o *FiltersVolume) SetSnapshotIds(v []string) {
	o.SnapshotIds = &v
}

// GetSubregionNames returns the SubregionNames field value if set, zero value otherwise.
func (o *FiltersVolume) GetSubregionNames() []string {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret
	}
	return *o.SubregionNames
}

// GetSubregionNamesOk returns a tuple with the SubregionNames field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetSubregionNamesOk() ([]string, bool) {
	if o == nil || o.SubregionNames == nil {
		var ret []string
		return ret, false
	}
	return *o.SubregionNames, true
}

// HasSubregionNames returns a boolean if a field has been set.
func (o *FiltersVolume) HasSubregionNames() bool {
	if o != nil && o.SubregionNames != nil {
		return true
	}

	return false
}

// SetSubregionNames gets a reference to the given []string and assigns it to the SubregionNames field.
func (o *FiltersVolume) SetSubregionNames(v []string) {
	o.SubregionNames = &v
}

// GetTagKeys returns the TagKeys field value if set, zero value otherwise.
func (o *FiltersVolume) GetTagKeys() []string {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret
	}
	return *o.TagKeys
}

// GetTagKeysOk returns a tuple with the TagKeys field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetTagKeysOk() ([]string, bool) {
	if o == nil || o.TagKeys == nil {
		var ret []string
		return ret, false
	}
	return *o.TagKeys, true
}

// HasTagKeys returns a boolean if a field has been set.
func (o *FiltersVolume) HasTagKeys() bool {
	if o != nil && o.TagKeys != nil {
		return true
	}

	return false
}

// SetTagKeys gets a reference to the given []string and assigns it to the TagKeys field.
func (o *FiltersVolume) SetTagKeys(v []string) {
	o.TagKeys = &v
}

// GetTagValues returns the TagValues field value if set, zero value otherwise.
func (o *FiltersVolume) GetTagValues() []string {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret
	}
	return *o.TagValues
}

// GetTagValuesOk returns a tuple with the TagValues field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetTagValuesOk() ([]string, bool) {
	if o == nil || o.TagValues == nil {
		var ret []string
		return ret, false
	}
	return *o.TagValues, true
}

// HasTagValues returns a boolean if a field has been set.
func (o *FiltersVolume) HasTagValues() bool {
	if o != nil && o.TagValues != nil {
		return true
	}

	return false
}

// SetTagValues gets a reference to the given []string and assigns it to the TagValues field.
func (o *FiltersVolume) SetTagValues(v []string) {
	o.TagValues = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FiltersVolume) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret, false
	}
	return *o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FiltersVolume) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FiltersVolume) SetTags(v []string) {
	o.Tags = &v
}

// GetVolumeIds returns the VolumeIds field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeIds() []string {
	if o == nil || o.VolumeIds == nil {
		var ret []string
		return ret
	}
	return *o.VolumeIds
}

// GetVolumeIdsOk returns a tuple with the VolumeIds field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeIdsOk() ([]string, bool) {
	if o == nil || o.VolumeIds == nil {
		var ret []string
		return ret, false
	}
	return *o.VolumeIds, true
}

// HasVolumeIds returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeIds() bool {
	if o != nil && o.VolumeIds != nil {
		return true
	}

	return false
}

// SetVolumeIds gets a reference to the given []string and assigns it to the VolumeIds field.
func (o *FiltersVolume) SetVolumeIds(v []string) {
	o.VolumeIds = &v
}

// GetVolumeSizes returns the VolumeSizes field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeSizes() []int32 {
	if o == nil || o.VolumeSizes == nil {
		var ret []int32
		return ret
	}
	return *o.VolumeSizes
}

// GetVolumeSizesOk returns a tuple with the VolumeSizes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeSizesOk() ([]int32, bool) {
	if o == nil || o.VolumeSizes == nil {
		var ret []int32
		return ret, false
	}
	return *o.VolumeSizes, true
}

// HasVolumeSizes returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeSizes() bool {
	if o != nil && o.VolumeSizes != nil {
		return true
	}

	return false
}

// SetVolumeSizes gets a reference to the given []int32 and assigns it to the VolumeSizes field.
func (o *FiltersVolume) SetVolumeSizes(v []int32) {
	o.VolumeSizes = &v
}

// GetVolumeStates returns the VolumeStates field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeStates() []string {
	if o == nil || o.VolumeStates == nil {
		var ret []string
		return ret
	}
	return *o.VolumeStates
}

// GetVolumeStatesOk returns a tuple with the VolumeStates field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeStatesOk() ([]string, bool) {
	if o == nil || o.VolumeStates == nil {
		var ret []string
		return ret, false
	}
	return *o.VolumeStates, true
}

// HasVolumeStates returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeStates() bool {
	if o != nil && o.VolumeStates != nil {
		return true
	}

	return false
}

// SetVolumeStates gets a reference to the given []string and assigns it to the VolumeStates field.
func (o *FiltersVolume) SetVolumeStates(v []string) {
	o.VolumeStates = &v
}

// GetVolumeTypes returns the VolumeTypes field value if set, zero value otherwise.
func (o *FiltersVolume) GetVolumeTypes() []string {
	if o == nil || o.VolumeTypes == nil {
		var ret []string
		return ret
	}
	return *o.VolumeTypes
}

// GetVolumeTypesOk returns a tuple with the VolumeTypes field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *FiltersVolume) GetVolumeTypesOk() ([]string, bool) {
	if o == nil || o.VolumeTypes == nil {
		var ret []string
		return ret, false
	}
	return *o.VolumeTypes, true
}

// HasVolumeTypes returns a boolean if a field has been set.
func (o *FiltersVolume) HasVolumeTypes() bool {
	if o != nil && o.VolumeTypes != nil {
		return true
	}

	return false
}

// SetVolumeTypes gets a reference to the given []string and assigns it to the VolumeTypes field.
func (o *FiltersVolume) SetVolumeTypes(v []string) {
	o.VolumeTypes = &v
}

type NullableFiltersVolume struct {
	Value FiltersVolume
	ExplicitNull bool
}

func (v NullableFiltersVolume) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}	
}

func (v *NullableFiltersVolume) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

