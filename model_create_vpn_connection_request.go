/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// CreateVpnConnectionRequest struct for CreateVpnConnectionRequest
type CreateVpnConnectionRequest struct {
	// The ID of the client gateway.
	ClientGatewayId string `json:"ClientGatewayId"`
	// The type of VPN connection (only `ipsec.1` is supported).
	ConnectionType string `json:"ConnectionType"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// If `false`, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If `true`, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
	StaticRoutesOnly *bool `json:"StaticRoutesOnly,omitempty"`
	// The ID of the virtual gateway.
	VirtualGatewayId string `json:"VirtualGatewayId"`
}

// GetClientGatewayId returns the ClientGatewayId field value
func (o *CreateVpnConnectionRequest) GetClientGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientGatewayId
}

// SetClientGatewayId sets field value
func (o *CreateVpnConnectionRequest) SetClientGatewayId(v string) {
	o.ClientGatewayId = v
}

// GetConnectionType returns the ConnectionType field value
func (o *CreateVpnConnectionRequest) GetConnectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionType
}

// SetConnectionType sets field value
func (o *CreateVpnConnectionRequest) SetConnectionType(v string) {
	o.ConnectionType = v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateVpnConnectionRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetDryRunOk() (bool, bool) {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret, false
	}
	return *o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateVpnConnectionRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateVpnConnectionRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetStaticRoutesOnly returns the StaticRoutesOnly field value if set, zero value otherwise.
func (o *CreateVpnConnectionRequest) GetStaticRoutesOnly() bool {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret
	}
	return *o.StaticRoutesOnly
}

// GetStaticRoutesOnlyOk returns a tuple with the StaticRoutesOnly field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpnConnectionRequest) GetStaticRoutesOnlyOk() (bool, bool) {
	if o == nil || o.StaticRoutesOnly == nil {
		var ret bool
		return ret, false
	}
	return *o.StaticRoutesOnly, true
}

// HasStaticRoutesOnly returns a boolean if a field has been set.
func (o *CreateVpnConnectionRequest) HasStaticRoutesOnly() bool {
	if o != nil && o.StaticRoutesOnly != nil {
		return true
	}

	return false
}

// SetStaticRoutesOnly gets a reference to the given bool and assigns it to the StaticRoutesOnly field.
func (o *CreateVpnConnectionRequest) SetStaticRoutesOnly(v bool) {
	o.StaticRoutesOnly = &v
}

// GetVirtualGatewayId returns the VirtualGatewayId field value
func (o *CreateVpnConnectionRequest) GetVirtualGatewayId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualGatewayId
}

// SetVirtualGatewayId sets field value
func (o *CreateVpnConnectionRequest) SetVirtualGatewayId(v string) {
	o.VirtualGatewayId = v
}

type NullableCreateVpnConnectionRequest struct {
	Value CreateVpnConnectionRequest
	ExplicitNull bool
}

func (v NullableCreateVpnConnectionRequest) MarshalJSON() ([]byte, error) {
    switch {
    case v.ExplicitNull:
        return []byte("null"), nil
    default:
		return json.Marshal(v.Value)
	}	
}

func (v *NullableCreateVpnConnectionRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}

