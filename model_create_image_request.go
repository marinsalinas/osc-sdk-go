/*
 * 3DS OUTSCALE API
 *
 * Welcome to the 3DS OUTSCALE's API documentation.<br /><br />  The 3DS OUTSCALE API enables you to manage your resources in the 3DS OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the 3DS OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the 3DS OUTSCALE API. You can find a list of the differences [here](https://wiki.outscale.net/display/EN/3DS+OUTSCALE+APIs+Reference).<br /><br />  You can also manage your resources using the [Cockpit](https://wiki.outscale.net/display/EN/About+Cockpit) web interface.
 *
 * API version: 0.15
 * Contact: support@outscale.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package oscgo

import (
	"bytes"
	"encoding/json"
)

// CreateImageRequest struct for CreateImageRequest
type CreateImageRequest struct {
	// The architecture of the OMI (by default, `i386`).
	Architecture *string `json:"Architecture,omitempty"`
	// One or more block device mappings.
	BlockDeviceMappings *[]BlockDeviceMappingImage `json:"BlockDeviceMappings,omitempty"`
	// A description for the new OMI.
	Description *string `json:"Description,omitempty"`
	// If `true`, checks whether you have the required permissions to perform the action.
	DryRun *bool `json:"DryRun,omitempty"`
	// The pre-signed URL of the OMI manifest file, or the full path to the OMI stored in an OSU bucket. If you specify this parameter, a copy of the OMI is created in your account.
	FileLocation *string `json:"FileLocation,omitempty"`
	// A unique name for the new OMI.<br /> Constraints: 3-128 alphanumeric characters, underscores (_), spaces ( ), parentheses (()), slashes (/), periods (.), or dashes (-).
	ImageName *string `json:"ImageName,omitempty"`
	// If `false`, the VM shuts down before creating the OMI and then reboots. If `true`, the VM does not.
	NoReboot *bool `json:"NoReboot,omitempty"`
	// The name of the root device.
	RootDeviceName *string `json:"RootDeviceName,omitempty"`
	// The ID of the OMI you want to copy.
	SourceImageId *string `json:"SourceImageId,omitempty"`
	// The name of the source Region, which must be the same as the Region of your account.
	SourceRegionName *string `json:"SourceRegionName,omitempty"`
	// The ID of the VM from which you want to create the OMI.
	VmId *string `json:"VmId,omitempty"`
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *CreateImageRequest) GetArchitecture() string {
	if o == nil || o.Architecture == nil {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetArchitectureOk() (string, bool) {
	if o == nil || o.Architecture == nil {
		var ret string
		return ret, false
	}
	return *o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *CreateImageRequest) HasArchitecture() bool {
	if o != nil && o.Architecture != nil {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *CreateImageRequest) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetBlockDeviceMappings returns the BlockDeviceMappings field value if set, zero value otherwise.
func (o *CreateImageRequest) GetBlockDeviceMappings() []BlockDeviceMappingImage {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingImage
		return ret
	}
	return *o.BlockDeviceMappings
}

// GetBlockDeviceMappingsOk returns a tuple with the BlockDeviceMappings field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetBlockDeviceMappingsOk() ([]BlockDeviceMappingImage, bool) {
	if o == nil || o.BlockDeviceMappings == nil {
		var ret []BlockDeviceMappingImage
		return ret, false
	}
	return *o.BlockDeviceMappings, true
}

// HasBlockDeviceMappings returns a boolean if a field has been set.
func (o *CreateImageRequest) HasBlockDeviceMappings() bool {
	if o != nil && o.BlockDeviceMappings != nil {
		return true
	}

	return false
}

// SetBlockDeviceMappings gets a reference to the given []BlockDeviceMappingImage and assigns it to the BlockDeviceMappings field.
func (o *CreateImageRequest) SetBlockDeviceMappings(v []BlockDeviceMappingImage) {
	o.BlockDeviceMappings = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateImageRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetDescriptionOk() (string, bool) {
	if o == nil || o.Description == nil {
		var ret string
		return ret, false
	}
	return *o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateImageRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateImageRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDryRun returns the DryRun field value if set, zero value otherwise.
func (o *CreateImageRequest) GetDryRun() bool {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret
	}
	return *o.DryRun
}

// GetDryRunOk returns a tuple with the DryRun field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetDryRunOk() (bool, bool) {
	if o == nil || o.DryRun == nil {
		var ret bool
		return ret, false
	}
	return *o.DryRun, true
}

// HasDryRun returns a boolean if a field has been set.
func (o *CreateImageRequest) HasDryRun() bool {
	if o != nil && o.DryRun != nil {
		return true
	}

	return false
}

// SetDryRun gets a reference to the given bool and assigns it to the DryRun field.
func (o *CreateImageRequest) SetDryRun(v bool) {
	o.DryRun = &v
}

// GetFileLocation returns the FileLocation field value if set, zero value otherwise.
func (o *CreateImageRequest) GetFileLocation() string {
	if o == nil || o.FileLocation == nil {
		var ret string
		return ret
	}
	return *o.FileLocation
}

// GetFileLocationOk returns a tuple with the FileLocation field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetFileLocationOk() (string, bool) {
	if o == nil || o.FileLocation == nil {
		var ret string
		return ret, false
	}
	return *o.FileLocation, true
}

// HasFileLocation returns a boolean if a field has been set.
func (o *CreateImageRequest) HasFileLocation() bool {
	if o != nil && o.FileLocation != nil {
		return true
	}

	return false
}

// SetFileLocation gets a reference to the given string and assigns it to the FileLocation field.
func (o *CreateImageRequest) SetFileLocation(v string) {
	o.FileLocation = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *CreateImageRequest) GetImageName() string {
	if o == nil || o.ImageName == nil {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetImageNameOk() (string, bool) {
	if o == nil || o.ImageName == nil {
		var ret string
		return ret, false
	}
	return *o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *CreateImageRequest) HasImageName() bool {
	if o != nil && o.ImageName != nil {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *CreateImageRequest) SetImageName(v string) {
	o.ImageName = &v
}

// GetNoReboot returns the NoReboot field value if set, zero value otherwise.
func (o *CreateImageRequest) GetNoReboot() bool {
	if o == nil || o.NoReboot == nil {
		var ret bool
		return ret
	}
	return *o.NoReboot
}

// GetNoRebootOk returns a tuple with the NoReboot field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetNoRebootOk() (bool, bool) {
	if o == nil || o.NoReboot == nil {
		var ret bool
		return ret, false
	}
	return *o.NoReboot, true
}

// HasNoReboot returns a boolean if a field has been set.
func (o *CreateImageRequest) HasNoReboot() bool {
	if o != nil && o.NoReboot != nil {
		return true
	}

	return false
}

// SetNoReboot gets a reference to the given bool and assigns it to the NoReboot field.
func (o *CreateImageRequest) SetNoReboot(v bool) {
	o.NoReboot = &v
}

// GetRootDeviceName returns the RootDeviceName field value if set, zero value otherwise.
func (o *CreateImageRequest) GetRootDeviceName() string {
	if o == nil || o.RootDeviceName == nil {
		var ret string
		return ret
	}
	return *o.RootDeviceName
}

// GetRootDeviceNameOk returns a tuple with the RootDeviceName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetRootDeviceNameOk() (string, bool) {
	if o == nil || o.RootDeviceName == nil {
		var ret string
		return ret, false
	}
	return *o.RootDeviceName, true
}

// HasRootDeviceName returns a boolean if a field has been set.
func (o *CreateImageRequest) HasRootDeviceName() bool {
	if o != nil && o.RootDeviceName != nil {
		return true
	}

	return false
}

// SetRootDeviceName gets a reference to the given string and assigns it to the RootDeviceName field.
func (o *CreateImageRequest) SetRootDeviceName(v string) {
	o.RootDeviceName = &v
}

// GetSourceImageId returns the SourceImageId field value if set, zero value otherwise.
func (o *CreateImageRequest) GetSourceImageId() string {
	if o == nil || o.SourceImageId == nil {
		var ret string
		return ret
	}
	return *o.SourceImageId
}

// GetSourceImageIdOk returns a tuple with the SourceImageId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetSourceImageIdOk() (string, bool) {
	if o == nil || o.SourceImageId == nil {
		var ret string
		return ret, false
	}
	return *o.SourceImageId, true
}

// HasSourceImageId returns a boolean if a field has been set.
func (o *CreateImageRequest) HasSourceImageId() bool {
	if o != nil && o.SourceImageId != nil {
		return true
	}

	return false
}

// SetSourceImageId gets a reference to the given string and assigns it to the SourceImageId field.
func (o *CreateImageRequest) SetSourceImageId(v string) {
	o.SourceImageId = &v
}

// GetSourceRegionName returns the SourceRegionName field value if set, zero value otherwise.
func (o *CreateImageRequest) GetSourceRegionName() string {
	if o == nil || o.SourceRegionName == nil {
		var ret string
		return ret
	}
	return *o.SourceRegionName
}

// GetSourceRegionNameOk returns a tuple with the SourceRegionName field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetSourceRegionNameOk() (string, bool) {
	if o == nil || o.SourceRegionName == nil {
		var ret string
		return ret, false
	}
	return *o.SourceRegionName, true
}

// HasSourceRegionName returns a boolean if a field has been set.
func (o *CreateImageRequest) HasSourceRegionName() bool {
	if o != nil && o.SourceRegionName != nil {
		return true
	}

	return false
}

// SetSourceRegionName gets a reference to the given string and assigns it to the SourceRegionName field.
func (o *CreateImageRequest) SetSourceRegionName(v string) {
	o.SourceRegionName = &v
}

// GetVmId returns the VmId field value if set, zero value otherwise.
func (o *CreateImageRequest) GetVmId() string {
	if o == nil || o.VmId == nil {
		var ret string
		return ret
	}
	return *o.VmId
}

// GetVmIdOk returns a tuple with the VmId field value if set, zero value otherwise
// and a boolean to check if the value has been set.
func (o *CreateImageRequest) GetVmIdOk() (string, bool) {
	if o == nil || o.VmId == nil {
		var ret string
		return ret, false
	}
	return *o.VmId, true
}

// HasVmId returns a boolean if a field has been set.
func (o *CreateImageRequest) HasVmId() bool {
	if o != nil && o.VmId != nil {
		return true
	}

	return false
}

// SetVmId gets a reference to the given string and assigns it to the VmId field.
func (o *CreateImageRequest) SetVmId(v string) {
	o.VmId = &v
}

type NullableCreateImageRequest struct {
	Value        CreateImageRequest
	ExplicitNull bool
}

func (v NullableCreateImageRequest) MarshalJSON() ([]byte, error) {
	switch {
	case v.ExplicitNull:
		return []byte("null"), nil
	default:
		return json.Marshal(v.Value)
	}
}

func (v *NullableCreateImageRequest) UnmarshalJSON(src []byte) error {
	if bytes.Equal(src, []byte("null")) {
		v.ExplicitNull = true
		return nil
	}

	return json.Unmarshal(src, &v.Value)
}
